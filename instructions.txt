Mask RCNN instructions.

If using labelme:
	Convert .json / images generated by labelme to coco:
		python labelme2coco.py "Z:/DeepLabCut/misc/images_for_coco/entire_body/train" "Z:/DeepLabCut/misc/tensorflow/labelme2coco/output_coco" --labels body_parts_all.txt
		Use modified labelme2coco.py (modified to work in Windows). Backup located in at: "Z:\Golden_Lab_Users\Nilsson_Simon\backup\labelme2coco.py"
	Convert coco.json to tf_record:
		python create_coco_tf_record_from_labelme_coco.py
		Use modified create_coco_tf_record (modified to handle segmenets = 4, confused with bbbox, and standard bbox sizes). Backup located at: "Z:\Golden_Lab_Users\Nilsson_Simon\backup\create_coco_tf_record_from_labelme_coco.py"
	Run RCC training:
		python model_main.py --logtostderr
		Use labelmap.pbtxt, pipeline.config, and model_main in this path: Z:\Golden_Lab_Users\Nilsson_Simon\backup\mask_rcnn_labelme
		Manually create: \train\export\Servo	

Using polyglon labelling interface:
	Initate polyglon labelling interface:
		python -m coco_dataset_generator.gui.segment -i "Z:/DeepLabCut/misc/images_for_coco" -c classes/heads.txt
	Create combinedcoco.json from txt label info files:
		python -m coco_dataset_generator.utils.create_json_file -i "Z:\DeepLabCut\misc\images_for_coco_train" -c classes/heads.txt -o heads_train -t png
		Software backup at: "Z:\Golden_Lab_Users\Nilsson_Simon\backup\COCO-Style-Dataset-Generator-GUI-master"
	Convert coco.json to tf_record:
		python create_coco_tf_record.py
		Modied to handle the classes names and the bboxes and 4 values rather than 2. Backup at: "Z:\Golden_Lab_Users\Nilsson_Simon\backup\create_coco_tf_record_train.py"
	Run RCC training:
		python model_main.py --logtostderr
		Use labelmap.pbtxt, pipeline.config, and model_main in this path: Z:\Golden_Lab_Users\Nilsson_Simon\backup\mask_rcnn_labelme
		Manually create: \train\export\Servo
		Modify the labelmap.pbtxt and the pipeline config (number of classes) to fit. 